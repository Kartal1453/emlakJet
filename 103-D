///////// Variant 1

function menuDesing() {
  if(document.querySelector("[data-ej-label='button_allfilters']").querySelector("span").innerText =='add_circle_outline\nTüm Filtreler'){
     var filterArea = document.querySelector("[data-ej-label='button_allfilters']");
    filterArea.querySelector("span").innerHTML = 'Detaylı Filtre <i class="material-icons">expand_more</i>';
    filterArea.querySelector(".ej9").style.cssText ="justify-content: space-between;";
    filterArea.querySelector(".material-icons").style.cssText ="margin-right:-7px;";
  };
    document.querySelector("[data-ej-label='button_allfilters']").addEventListener("click", function(){
    if(document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ='expand_less' && document.querySelector(".styles_filtersContainer__38_PV")) {
      document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_more" ;
     }else{
      document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_less";
      
    }; 
  });
    if(!document.querySelector(".styles_filtersContainer__38_PV")){document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_more" ;}
}

menuDesing();
 var dom_observer = new MutationObserver(function (mutation) {
          menuDesing()
         })
         var container = document.body
         var configs = {attributes: false, childList: true, characterData: false}
         dom_observer.observe(container, configs)
 ready();
   function ready() {
     if (document.readyState == "loading") {
         
         document.addEventListener("DOMContentLoaded", menuDesing)
     } else {
         
         menuDesing()
     }
     window.addEventListener("load", function () {
         var dom_observer = new MutationObserver(function (mutation) {
          menuDesing()
         })
         var container = document.body
         var configs = {attributes: false, childList: true, characterData: false}
         dom_observer.observe(container, configs)
     })
   }
   
///////// Variant 2

function menuDesing() {
  if(document.querySelector("[data-ej-label='button_allfilters']").querySelector("span").innerText =='add_circle_outline\nTüm Filtreler'){
      var filterArea = document.querySelector("[data-ej-label='button_allfilters']");
    filterArea.querySelector("span").innerHTML = 'Detaylı Filtre <i class="material-icons">expand_more</i>';
    filterArea.querySelector(".ej9").style.cssText ="justify-content: space-between;color: #263238;";
    filterArea.querySelector(".material-icons").style.cssText ="color: #797979;margin-right:-7px;font-weight: 400 !important;";
    filterArea.querySelector("button").style.cssText ="min-width: 150px; color: #223445!important; background-color: transparent !important; border: 1px solid #bcc2c7!important; font-weight: 400 !important;"
  }
  document.querySelector("[data-ej-label='button_allfilters']").addEventListener("click", function(){
  if(document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ='expand_less' && document.querySelector(".styles_filtersContainer__38_PV")) {
    document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_more" ;
   }else{
    document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_less";
    
  }; 
});
  if(!document.querySelector(".styles_filtersContainer__38_PV")){document.querySelector("[data-ej-label='button_allfilters']").querySelector("i").innerHTML ="expand_more" ;}
}

menuDesing();
 var dom_observer = new MutationObserver(function (mutation) {
          menuDesing()
         })
         var container = document.body
         var configs = {attributes: false, childList: true, characterData: false}
         dom_observer.observe(container, configs)
 ready();
   function ready() {
     if (document.readyState == "loading") {
         
         document.addEventListener("DOMContentLoaded", menuDesing)
     } else {
         
         menuDesing()
     }
     window.addEventListener("load", function () {
         var dom_observer = new MutationObserver(function (mutation) {
          menuDesing()
         })
         var container = document.body
         var configs = {attributes: false, childList: true, characterData: false}
         dom_observer.observe(container, configs)
     })
   }
